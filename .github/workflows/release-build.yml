name: Release Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true  # Ensure submodules are checked out

      - name: Initialize submodules
        run: git submodule update --init --recursive

      # Debug step: List directory contents to verify the presence of vcpkg
      - name: List directory contents
        run: dir

      # Debug step: List contents of vcpkg directory
      - name: List vcpkg directory contents
        run: dir vcpkg

      - name: Install vcpkg dependencies (Windows)
        shell: cmd  # Use cmd shell to run .bat files
        run: |
          vcpkg\bootstrap-vcpkg.bat
          vcpkg\vcpkg.exe install --triplet x64-windows

      - name: Set up CUDA
        run: |
          $Env:CUDA_TOOLKIT_ROOT_DIR = "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1"

      - name: Install dependencies
        run: |
          choco install -y cmake ninja

      - name: Configure CMake (Windows)
        run: |
          cmake -S . -B out/build/x64-release -DCMAKE_TOOLCHAIN_FILE=%CD%/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_BUILD_TYPE=Release

      - name: Build project (Windows)
        run: |
          cmake --build out/build/x64-release --config Release

      - name: Copy dependencies (Windows)
        run: |
          xcopy /S /Y "%CD%\vcpkg\installed\x64-windows\bin\*.dll" "out/build/x64-release/"
          xcopy /S /Y "$Env:CUDA_TOOLKIT_ROOT_DIR\bin\*.dll" "out/build/x64-release/"

      - name: Create zip archive (Windows)
        run: |
          Compress-Archive -Path out/build/x64-release/* -DestinationPath FrameSmith-Windows.zip

      - name: Upload build artifacts (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: FrameSmith_Windows_build
          path: FrameSmith-Windows.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true  # Ensure submodules are checked out

      - name: Initialize submodules
        run: git submodule update --init --recursive

      # Debug step: List directory contents to verify the presence of vcpkg
      - name: List directory contents
        run: ls

      # Debug step: List contents of vcpkg directory
      - name: List vcpkg directory contents
        run: ls vcpkg

      - name: Install vcpkg dependencies (Linux)
        run: |
          ./vcpkg/bootstrap-vcpkg.sh
          ./vcpkg/vcpkg install --triplet x64-linux

      - name: Configure CMake (Linux)
        run: |
          cmake -S . -B out/build/x64-release -DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-linux -DCMAKE_BUILD_TYPE=Release

      - name: Build project (Linux)
        run: |
          cmake --build out/build/x64-release --config Release

      - name: Copy dependencies (Linux)
        run: |
          cp ${GITHUB_WORKSPACE}/vcpkg/installed/x64-linux/lib/*.so* out/build/x64-release/

      - name: Create zip archive (Linux)
        run: |
          zip -r FrameSmith-Linux.zip out/build/x64-release/*

      - name: Upload build artifacts (Linux)
        uses: actions/upload-artifact@v3
        with:
          name: FrameSmith_Linux_build
          path: FrameSmith-Linux.zip

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    steps:
      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: FrameSmith_Windows_build
          path: .

      - name: Download Linux build
        uses: actions/download-artifact@v3
        with:
          name: FrameSmith_Linux_build
          path: .

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          assets: |
            FrameSmith-Windows.zip
            FrameSmith-Linux.zip
